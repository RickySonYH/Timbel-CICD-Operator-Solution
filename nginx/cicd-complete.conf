# [advice from AI] Timbel Knowledge CI/CD 통합 Nginx 설정
# Jenkins, Nexus, Argo CD, Gitea 통합 프록시

upstream jenkins {
    server jenkins:8080;
}

upstream nexus {
    server nexus:8081;
}

upstream argocd {
    server argocd-server:8080;
}

upstream gitea {
    server gitea:3000;
}

# Health Check Endpoint
server {
    listen 80;
    server_name localhost;
    
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}

# Jenkins CI/CD Server
server {
    listen 80;
    server_name jenkins.timbel.local localhost;
    
    location /jenkins/ {
        proxy_pass http://jenkins/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect http://jenkins/ /jenkins/;
        
        # WebSocket support for Jenkins
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Jenkins specific headers
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_buffering off;
    }
}

# Nexus Repository Manager
server {
    listen 80;
    server_name nexus.timbel.local;
    
    client_max_body_size 1G;
    
    location / {
        proxy_pass http://nexus;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Nexus specific settings
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
        proxy_read_timeout 300;
        send_timeout 300;
    }
}

# Docker Registry (Nexus)
server {
    listen 80;
    server_name registry.timbel.local;
    
    client_max_body_size 0;
    chunked_transfer_encoding on;
    
    location /v2/ {
        proxy_pass http://nexus:8082/v2/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 900;
    }
}

# Argo CD GitOps
server {
    listen 80;
    server_name argocd.timbel.local;
    
    location / {
        proxy_pass http://argocd;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support for Argo CD
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Argo CD specific headers
        proxy_buffering off;
        proxy_request_buffering off;
    }
}

# Gitea Git Server
server {
    listen 80;
    server_name gitea.timbel.local;
    
    client_max_body_size 512M;
    
    location / {
        proxy_pass http://gitea;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Git specific settings
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
        proxy_read_timeout 300;
        send_timeout 300;
    }
}

# Default server for direct access
server {
    listen 80 default_server;
    server_name _;
    
    location / {
        return 200 '
<!DOCTYPE html>
<html>
<head>
    <title>Timbel Knowledge CI/CD Stack</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; background: #f5f5f5; }
        .container { background: white; padding: 30px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
        .service { margin: 20px 0; padding: 15px; border-left: 4px solid #007acc; background: #f8f9fa; }
        .service h3 { margin: 0 0 10px 0; color: #007acc; }
        .service a { color: #007acc; text-decoration: none; font-weight: bold; }
        .service a:hover { text-decoration: underline; }
        .credentials { background: #fff3cd; padding: 10px; border-radius: 4px; margin-top: 10px; }
    </style>
</head>
<body>
    <div class="container">
        <h1>🚀 Timbel Knowledge CI/CD Stack</h1>
        <p>완전 자동화된 CI/CD 파이프라인이 준비되었습니다.</p>
        
        <div class="service">
            <h3>🔧 Jenkins CI/CD</h3>
            <p>지속적 통합 및 배포 서버</p>
            <a href="http://localhost:8080" target="_blank">Jenkins 접속</a>
            <div class="credentials">계정: admin / admin123!</div>
        </div>
        
        <div class="service">
            <h3>📦 Nexus Repository</h3>
            <p>아티팩트 및 Docker 이미지 저장소</p>
            <a href="http://localhost:8081" target="_blank">Nexus 접속</a>
            <div class="credentials">계정: admin / admin123!</div>
        </div>
        
        <div class="service">
            <h3>🚀 Argo CD</h3>
            <p>GitOps 기반 배포 관리</p>
            <a href="http://localhost:8084" target="_blank">Argo CD 접속</a>
            <div class="credentials">계정: admin / admin123!</div>
        </div>
        
        <div class="service">
            <h3>📂 Gitea</h3>
            <p>Git 저장소 서버</p>
            <a href="http://localhost:3010" target="_blank">Gitea 접속</a>
            <div class="credentials">계정: admin / admin123!</div>
        </div>
        
        <div class="service">
            <h3>🐳 Docker Registry</h3>
            <p>컨테이너 이미지 레지스트리</p>
            <code>docker push localhost:8082/your-image:tag</code>
        </div>
    </div>
</body>
</html>
        ';
        add_header Content-Type text/html;
    }
}
